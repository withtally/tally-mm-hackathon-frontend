[{"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/index.tsx":"1","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/reportWebVitals.ts":"2","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/App.tsx":"3","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/hooks/useWeb3.ts":"4","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/components/Footer.tsx":"5","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/components/Header.tsx":"6","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/components/Container.tsx":"7","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/components/Home.tsx":"8","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/vault/components/Vault.tsx":"9","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/hooks/useVault.ts":"10","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/hooks/useVaultFactory.ts":"11","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/vault/hooks/useCloseVault.ts":"12","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/vault/hooks/useVaultInfo.ts":"13","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/hooks/useCreateVault.ts":"14","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/hooks/useListOwnedVaults.ts":"15","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/hooks/useToken.ts":"16","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/lib/helpers.ts":"17","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/components/VaultTable.tsx":"18","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/lib/modules.ts":"19","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/lib/routes.ts":"20","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/vault/hooks/useDelegateVotes.ts":"21","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/hooks/useEpochExpiry.ts":"22","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/hooks/useVaultToken.ts":"23"},{"size":479,"mtime":1612324827341,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1612217959603,"results":"26","hashOfConfig":"25"},{"size":708,"mtime":1612524820571,"results":"27","hashOfConfig":"25"},{"size":4741,"mtime":1612561139832,"results":"28","hashOfConfig":"25"},{"size":564,"mtime":1612514569504,"results":"29","hashOfConfig":"25"},{"size":712,"mtime":1612324862098,"results":"30","hashOfConfig":"25"},{"size":693,"mtime":1612552511992,"results":"31","hashOfConfig":"25"},{"size":5131,"mtime":1612561456505,"results":"32","hashOfConfig":"25"},{"size":3675,"mtime":1612554309404,"results":"33","hashOfConfig":"25"},{"size":737,"mtime":1612546879085,"results":"34","hashOfConfig":"25"},{"size":781,"mtime":1612562392750,"results":"35","hashOfConfig":"25"},{"size":693,"mtime":1612554453662,"results":"36","hashOfConfig":"25"},{"size":918,"mtime":1612546683555,"results":"37","hashOfConfig":"25"},{"size":470,"mtime":1612525371114,"results":"38","hashOfConfig":"25"},{"size":1513,"mtime":1612562946295,"results":"39","hashOfConfig":"25"},{"size":934,"mtime":1612526196777,"results":"40","hashOfConfig":"25"},{"size":253,"mtime":1612512370692,"results":"41","hashOfConfig":"25"},{"size":2829,"mtime":1612562597235,"results":"42","hashOfConfig":"25"},{"size":928,"mtime":1612560810853,"results":"43","hashOfConfig":"25"},{"size":118,"mtime":1612543596805,"results":"44","hashOfConfig":"25"},{"size":454,"mtime":1612526806116,"results":"45","hashOfConfig":"25"},{"size":413,"mtime":1612550197483,"results":"46","hashOfConfig":"25"},{"size":785,"mtime":1612563271922,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"18dbnjc",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/index.tsx",[],["98","99"],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/reportWebVitals.ts",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/App.tsx",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/hooks/useWeb3.ts",["100","101","102"],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/components/Footer.tsx",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/components/Header.tsx",["103"],"import React, { FC } from \"react\";\nimport { Flex, Button, Text, HStack } from \"@chakra-ui/react\";\n\nimport { useWeb3 } from \"../hooks/useWeb3\";\n\ntype Props = {}\n\nconst Header: FC<Props> = () => {\n  const { etherBalance, isWeb3Ready, openMetamask, signerAddress } = useWeb3();\n\n  return (\n      <Flex justifyContent=\"flex-end\" alignItems=\"center\" margin=\"15px\">\n        <HStack spacing=\"20px\">\n          <Text>\n            {etherBalance ? Number(etherBalance).toFixed(2) : '0.0'} ETH\n          </Text>\n          <Button colorScheme=\"teal\" onClick={() => openMetamask()}>\n            {isWeb3Ready ? \"Connected\" : \"Connect Metamask\"}\n          </Button>\n        </HStack>\n      </Flex>\n  );\n}\n\nexport default Header;","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/components/Container.tsx",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/components/Home.tsx",["104","105"],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/vault/components/Vault.tsx",["106"],"import React, { FC, useEffect, useState } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport {\n  Heading,\n  Flex,\n  Text,\n  VStack,\n  HStack,\n  Input,\n  Button,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  Radio,\n} from '@chakra-ui/react';\nimport { useParams } from '@reach/router';\n\nimport { useCloseVault } from 'vault/hooks/useCloseVault';\nimport { useVaultInfo } from 'vault/hooks/useVaultInfo';\nimport { useDelegateVote } from 'vault/hooks/useDelegateVotes';\nimport { useVault } from 'common/hooks/useVault';\nimport { useWeb3 } from 'common/hooks/useWeb3';\n\nconst Vault: FC<RouteComponentProps> = () => {\n  // react hooks\n  const [vaultBalance, setVaultBalance] = useState<number>(0);\n  const [vaultAddress, setVaultAddress] = useState<string>('');\n  const [address, setAddress] = useState<string>('');\n\n  // router hooks\n  const { vaultId } = useParams();\n\n  // custom hooks\n  const { getVaultInfo } = useVaultInfo();\n  const { signerAddress } = useWeb3();\n  const { delegate } = useDelegateVote({ vaultAddress });\n  const { vault } = useVault({ vaultAddress });\n\n  // effects\n  useEffect(() => {\n    if (!vaultId) return;\n\n    const asyncVaultInfo = async () => {\n      const result = await getVaultInfo(vaultId);\n      setVaultBalance(result.vaultBalance);\n      setVaultAddress(result.vaultAddress);\n    };\n\n    asyncVaultInfo();\n  }, [vaultId]);\n\n  // custom hooks\n  const { closeOwnVault } = useCloseVault();\n\n  // handlers\n  const handleCloseVault = async () => {\n    await closeOwnVault(vaultId);\n  };\n\n  const handleDelegateVotes = async () => {\n    await delegate(address);\n  };\n\n  // effects\n  useEffect(() => {\n    signerAddress &&\n      vault?.on('Delegation', (delegator: string, delegatee: string) => {\n        console.log('Delegation made', { delegator, delegatee });\n      });\n\n    return function cleanup() {\n      vault?.off('VaultCreated', () => {\n        console.log('unsubscribed');\n      });\n    };\n  });\n\n  return !signerAddress ? (\n    <Text>Loading...</Text>\n  ) : (\n    <VStack align=\"flex-start\" justify=\"flex-start\" spacing=\"30px\" w=\"full\">\n      <Heading justifySelf=\"flex-start\" as=\"h3\" size=\"lg\">\n        Vault No. {vaultId}\n      </Heading>\n      <Flex mb={2} w=\"full\">\n        <Text mr={1}>Balance</Text>\n        <Text>{vaultBalance} MT</Text>\n      </Flex>\n      <HStack hidden mb={2} w=\"full\">\n        <Text mr={1}>Underlying governance</Text>\n        <Text mr={1}>Compound</Text>\n      </HStack>\n      <Flex mb={4} w=\"full\">\n        <FormControl id=\"address\" w=\"300px\" mr={4}>\n          <FormLabel>Address</FormLabel>\n          <Input type=\"address\" onChange={(event) => setAddress(event.target.value)} />\n        </FormControl>\n        <Button colorScheme=\"teal\" mt=\"30px\" onClick={handleDelegateVotes}>\n          Delegate\n        </Button>\n      </Flex>\n      <VStack hidden align=\"flex-start\" justify=\"flex-start\">\n        <Flex mb={4}>\n          <Text mr={1}>Current Proposal:</Text>\n          <Text mr={1}>A proposal made for Compound</Text>\n        </Flex>\n        <Flex mb={4}>\n          <RadioGroup defaultValue=\"1\">\n            <VStack mr={16} mt={5}>\n              <Radio size=\"md\" value=\"1\" colorScheme=\"green\">\n                In favor\n              </Radio>\n              <Radio size=\"md\" value=\"2\" colorScheme=\"red\">\n                Against\n              </Radio>\n            </VStack>\n          </RadioGroup>\n\n          <Button colorScheme=\"teal\" mt=\"30px\" onClick={handleCloseVault}>\n            Vote\n          </Button>\n        </Flex>\n      </VStack>\n      <Flex mt={32} mb={4}>\n        <Button colorScheme=\"red\">Close Vault</Button>\n      </Flex>\n    </VStack>\n  );\n};\n\nexport default Vault;\n","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/hooks/useVault.ts",["107"],"import { useState, useEffect } from 'react';\nimport { Contract } from 'ethers';\n\n// common\nimport { useWeb3 } from 'common/hooks/useWeb3';\n\n// Vault factory ABI\nimport VaultAbi from 'contracts/Vault.sol/Vault.json';\n\ntype Values = {\n  vault: Contract | undefined;\n};\n\ntype Props = {\n  vaultAddress: string;\n};\n\nexport const useVault = ({ vaultAddress }: Props): Values => {\n  const [contractInstance, setcontractInstance] = useState<Contract | undefined>(undefined);\n\n  // custom hooks\n  const { signer } = useWeb3();\n\n  useEffect(() => {\n    if(!vaultAddress) return;\n    const vault = new Contract(vaultAddress, VaultAbi.abi, signer);\n\n    setcontractInstance(vault);\n  }, [vaultAddress])\n  \n\n\n  return { vault: contractInstance };\n};\n","/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/hooks/useVaultFactory.ts",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/vault/hooks/useCloseVault.ts",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/vault/hooks/useVaultInfo.ts",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/hooks/useCreateVault.ts",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/hooks/useListOwnedVaults.ts",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/hooks/useToken.ts",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/lib/helpers.ts",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/components/VaultTable.tsx",["108"],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/lib/modules.ts",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/common/lib/routes.ts",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/vault/hooks/useDelegateVotes.ts",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/hooks/useEpochExpiry.ts",[],"/Users/natacha/Developer/Tally/hackathon/tally-mm-hackathon-frontend/src/home/hooks/useVaultToken.ts",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":80,"column":8,"nodeType":"115","endLine":80,"endColumn":10,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"117","line":149,"column":8,"nodeType":"115","endLine":149,"endColumn":21,"suggestions":"118"},{"ruleId":"113","severity":1,"message":"119","line":155,"column":8,"nodeType":"115","endLine":155,"endColumn":10,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":9,"column":52,"nodeType":"123","messageId":"124","endLine":9,"endColumn":65},{"ruleId":"113","severity":1,"message":"125","line":106,"column":6,"nodeType":"115","endLine":106,"endColumn":21,"suggestions":"126"},{"ruleId":"113","severity":1,"message":"127","line":112,"column":6,"nodeType":"115","endLine":112,"endColumn":21,"suggestions":"128"},{"ruleId":"113","severity":1,"message":"129","line":50,"column":6,"nodeType":"115","endLine":50,"endColumn":15,"suggestions":"130"},{"ruleId":"113","severity":1,"message":"131","line":29,"column":6,"nodeType":"115","endLine":29,"endColumn":20,"suggestions":"132"},{"ruleId":"121","severity":1,"message":"133","line":30,"column":26,"nodeType":"123","messageId":"124","endLine":30,"endColumn":43},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setProvider'. Either include it or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has missing dependencies: 'signer', 'signerAddress', and 'web3Provider'. Either include them or remove the dependency array.",["137"],"React Hook useEffect has a missing dependency: 'isDomReady'. Either include it or remove the dependency array.",["138"],"@typescript-eslint/no-unused-vars","'signerAddress' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'toast' and 'vaultFactory'. Either include them or remove the dependency array.",["139"],"React Hook useEffect has a missing dependency: 'asyncBalance'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has a missing dependency: 'getVaultInfo'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has a missing dependency: 'signer'. Either include it or remove the dependency array.",["142"],"'closeExpiredVault' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [setProvider]",{"range":"157","text":"158"},"Update the dependencies array to be: [isWeb3Ready, signer, signerAddress, web3Provider]",{"range":"159","text":"160"},"Update the dependencies array to be: [isDomReady]",{"range":"161","text":"162"},"Update the dependencies array to be: [signerAddress, toast, vaultFactory]",{"range":"163","text":"164"},"Update the dependencies array to be: [asyncBalance, signerAddress]",{"range":"165","text":"166"},"Update the dependencies array to be: [getVaultInfo, vaultId]",{"range":"167","text":"168"},"Update the dependencies array to be: [signer, vaultAddress]",{"range":"169","text":"170"},[2371,2373],"[setProvider]",[4276,4289],"[isWeb3Ready, signer, signerAddress, web3Provider]",[4422,4424],"[isDomReady]",[2845,2860],"[signerAddress, toast, vaultFactory]",[2942,2957],"[asyncBalance, signerAddress]",[1366,1375],"[getVaultInfo, vaultId]",[675,689],"[signer, vaultAddress]"]